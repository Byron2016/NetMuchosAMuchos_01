http://anexsoft.com/p/80/asp-net-mvc-creando-un-proyecto-desde-cero

1.- Crear Proyecto
	1.1.- New Project
	1.2.- web - Nombre - MVC
	
2.- Sincronizar con git
	2.1.- Botón derecho sobre solución y dar Add Git repositorio
	2.2.- Ir a sinc y colocar el url del repositorio git
	
3.- Agregar Layout
	3.1.- Agregar a Views carpeta "Shared"
	3.2.- Agregar archivos "New Empty file": _Layout.cshtml y _ViewStart.cshtml
	3.3.- Configurar _Layout.cshtml
		3.3.1.- En body colocar: @RenderBody() 
		3.3.2.- En el title colocar: @ViewBag.Title
	3.4.- Configurar _ViewStart.cshtml
		Agregar: 
		@{
			Layout = "~/Views/Shared/_Layout.cshtml";
		}
4.- Creación controlador Home
	4.1.- Como en App_Start/RoutingCongig.cs tengo x default controlador Home creamos es.
	4.2.- Sobre carpeta Controllers botón derecho add controller "MVC 5 Empty Controller"
	4.3.- Colocar nombre HomeController
	
5.- Creación vista index para el HomeController
	5.1.- Sobre el método "index" del controlador, presionar botón derecho add view.
	5.2.- Colocar el título y el contenido h2.
	
6.- Agregar EntityFramework
	6.1.- En el proyecto hacer: Add/New Proyect/Windows/Class Library
	6.2.- Poner de nombre: Model
	6.3.- Descargar el Entity Framework Tools: https://www.microsoft.com/en-us/download/details.aspx?id=40762
	6.4._ Sobre el Model presionar botón derecho: Add/New Item/Data/ADO.Net Entity Data Model
	6.5.- Dar nombre: TextContext (DBContext)
	6.6.- Seleccionar el Modelo d contexto: "Code First from database"
	6.7.- New Conexion y colocar el nombre del servidor/Tipo autenticación/Base de datos/Seleccionar tablas
	6.8.- En el Modelo Alumno.cs crear función List<Alumno> Listar()
	6.9.- Agregar REFERENCIA al MODELO: Sobre el proyecto: Add/Reference seleccionar Project y marcar MODELO
	6.10.- Agregar REFERENCIA a proyecto web de EntityFramework
		6.10.1.- sobre el proyecto botón derecho: Add/Service Reference 
	6.11.- Copiar en el Web.config del proyecto el string que está en el app.config del Model.
  <connectionStrings>
    <add name="TextContext" connectionString="data source=(localdb)\MSSQLLocalDB;initial catalog=Escuela;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />
  </connectionStrings>
	6.12.- Eliminar el app.config del Model (buena práctica)
	
7.- Bootstrap
	7.1.- Bajar Bootstrap, descomprimir y a la carpeta ponerle de nombre Assets y colocarlo en el proyecto.
	7.2.- Bajar jquery
	7.3.- Poner ref a: 
		<link href="~/Assets/css/bootstrap-theme.min.css" rel="stylesheet" />   
		<link href="~/Assets/css/bootstrap.min.css" rel="stylesheet" />
	7.4.- Poner ref a js: 
		<script src="~/Assets/js/jquery.js"></script>   
		<script src="~/Assets/js/bootstrap.min.js"></script>
	7.5.- Para íconos usar fonts awasome. pero también puede usarse bootstrap componests: http://getbootstrap.com/components/
	
	
8.- Insersión Actualización Muchos a Muchos
	8.1.- 
	
	
9.- Validar Formulario (https://www.youtube.com/watch?v=otcb3Ywx29Q&feature=youtu.be)
	9.1.- En la vista usar: @Html.ValidationMessageFor(x => x.Nombre, "No ha ingresado un nombre", new { @class="label label-danger"})
		9.1.1.- Puede poner el mensaje q se despliega como en el ejemplo: @Html.ValidationMessageFor(x => x.Nombre, "Ingresar un nombre", new { @class="label label-danger"})
		9.1.2.- Puede poner null y despliega mensaje x default : @Html.ValidationMessageFor(x => x.Nombre, null, new { @class="label label-danger"})
		9.1.3.- Puede poner el mensaje en la clase: [Required(ErrorMessage ="Debe meter nombre")]
	
10.- Eliminacion
	10.1.- POner las relaciones de eliminación en Cascada.
	10.2.- context.Entry(new Alumno { Id = id }).State = EntityState.Deleted; / context.SaveChanges();
	
	
	
https://es.stackoverflow.com/questions/5836/como-puedo-realizar-un-update-en-una-relaci%C3%B3n-muchos-a-muchos-entityframework-6
http://ltuttini.blogspot.com/2013/07/entity-frameworkcode-first-asociacion_28.html
http://panicoenlaxbox.blogspot.com/2014/04/eliminar-y-actualizar-eficientemente.html
http://www.isawnavarro.com/entityframework-y-relaciones-muchos-a-muchos/

http://www.isawnavarro.com/entityframework-y-relaciones-muchos-a-muchos/     /****** Aca da una muy buena alternativa aumentar columna en tabla intermedia****/
https://www.codeproject.com/Articles/702890/MVC-Entity-Framework-and-Many-to-Many-Relation

******************
trbajar con EF
*****************
http://thescienceofcode.azurewebsites.net/Articles/Show/57ed8b7d79e39e54f0b64026

******************
LINQ to SQL
*****************

http://speakingin.net/2007/05/20/usando-linq-to-sql-1%C2%AA-parte/

******************
EF rollback
*****************		
https://msdn.microsoft.com/en-us/library/dn456843(v=vs.113).aspx
	